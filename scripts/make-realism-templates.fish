echo "Making type definitions for realism templates" >&2

set -l knownVariants gun mod ammo gear
set -l inDir templates
set -l outDir app/SPT/Realism

for variant in $knownVariants
    set -l prettyVariant (echo $variant | awk '{print toupper(substr($0,1,1))substr($0,2)}')
    set -l recName "$prettyVariant"'Template'
    set -l dest "$outDir/$prettyVariant"Template.hs
    cat "$inDir/$variant.json" \
        | sed '/^{$/d' \
        | sed '/^}$/d' \
        | sort \
        | string replace -ar '"ItemID": .*,?' '"ItemID" :: Text' \
        | string replace -ar '"Name": .*,?' '"Name" :: Text' \
        | string replace -ar ': ".*",?' ' :: Maybe Text' \
        | string replace -ar ': -?\\d+\\.?\\d*,?' ' :: Maybe Double' \
        | string replace -ar ': (false|true),?' ' :: Maybe Bool' \
        | string replace -ar ': \\[.*\\],?' ' :: [Text]' \
        | sed '/".* \\[.*\\]" :: /d' \
        | sed -E 's/^  "(\\w.*\\w) "/  "\\1"/' \
        | string replace -a '"' '' \
        | sed 's/^\\s*//' \
        | awk '{print ($0 ~ /^[a-z]/ ? "_" $0 : tolower(substr($0,1,1)) substr($0,2))}' \
        | awk '{print ", "$0}' \
        | awk 'NR==1{$0="{"substr($0,2)}1' \
        | awk '{print} END {print "} deriving stock (Show)\n"}' \
        | sed '/^\\s*$/d' \
        | awk '!seen[substr($0, 1, index($0, " :: ")-1)]++' \
        | awk -v name=$prettyVariant 'BEGIN {print "data " name "Template = Mk" name "Template"} {print "    " $0}' \
        | awk -v name=$prettyVariant '
            BEGIN {
                print "{-# LANGUAGE TemplateHaskell #-}"
                print "-- | Generated by make-snippets"
                print "module SPT.Realism." name "Template (\n" name "Template(..)\n) where"
                print "import Data.Aeson.TH (deriveToJSON)"
                print "import Relude"
                print "import SPT.Realism.TH (derivingOpts)"
            }
            { print }
            END {
                print "$(deriveToJSON derivingOpts \'\'" name "Template)\n"
            }
        ' \
        | fourmolu --quiet --stdin-input-file "app/Main.hs" \
        | tee $dest >/dev/null

    echo "Made snippet for $variant in $dest" >&2
end
