echo "Making type definitions for base template" >&2

set -l pruned (
    cat templates/base.json \
    | jq '
        del(
            ._props.Prefab,
            ._props.UsePrefab,
            ._props.BackgroundColor,
            ._props.Width,
            ._props.Height,
            ._props.ItemSound,
            ._props.UnlootableFromSlot,
            ._props.UnlootableFromSide,
            ._props.Grids,
            ._props.Slots,
            ._props.CantRemoveFromSlotsDuringRaid
        )
    '
)

set -l props (echo $pruned | jq '._props')
set -l base (echo $pruned | jq 'del(._props)')

function set-types
    jq '
        map_values(
            if type == "string" then
                "Maybe Text"
            elif type == "number" then
                "Maybe Double"
            else
                "Maybe Bool"
            end
        )
    '
end

function pipeline
    sed '/^{$/d' \
        | sed '/^}$/d' \
        | sed 's/"//g' \
        | sed 's/,//g' \
        | sed 's/: / :: /' \
        | sed 's/^\\s*//' \
        | sed 's/^/'$argv[1]'/' \
        | sed 's/^/, /' \
        | awk 'NR==1{$0="{"substr($0,2)}1' \
        | awk '{print} END {print "}\n"}'
end

function make-module
    awk -v name=$argv[1] -v imprts="$argv[2]" '
        BEGIN {
            print "{-# LANGUAGE TemplateHaskell #-}"
            print "-- | Generated by make-base-template"
            print "module SPT." name "\n(\n" name "(..)\n) where"
            print "import Data.Aeson.TH (\n  deriveFromJSON, defaultOptions, fieldLabelModifier\n  )"
            print "import Relude"
            print imprts
            print "data " name " = Mk" name
        }
        {
          print "  " $0
        }
        END {
            print "$(deriveFromJSON  defaultOptions{fieldLabelModifier = drop " length(name) "} \'\'" name ")"
        }
    ' \
        | fourmolu --quiet --stdin-input-file "app/Main.hs"
end

echo "$props" \
    | set-types \
    | pipeline props \
    | make-module Props \
    | tee app/SPT/Props.hs >/dev/null

echo ""

echo "$base" \
    | set-types \
    | jq '._props = "Maybe Props"' \
    | pipeline template \
    | make-module Template "import SPT.Props (Props)" \
    | tee app/SPT/Template.hs >/dev/null
